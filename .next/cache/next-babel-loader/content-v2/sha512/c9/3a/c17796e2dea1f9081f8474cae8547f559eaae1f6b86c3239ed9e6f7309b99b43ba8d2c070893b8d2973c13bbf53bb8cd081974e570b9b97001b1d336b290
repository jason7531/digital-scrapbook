{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\OneDrive\\\\Desktop\\\\web-dev\\\\nextJS\\\\digital-scrapbook\\\\pages\\\\[meetupId].js\",\n    _this = this;\n\nimport MeetupDetail from \"../components/meetups/MeetupDetai\";\n\nvar MeetupDetails = function MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description,\n    id: props.id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, _this);\n}; // The dynamic ids for which the page needs to be pre rendered should be specified\n\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/KIIT/OneDrive/Desktop/web-dev/nextJS/digital-scrapbook/pages/[meetupId].js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description","id"],"mappings":";;;;;AAAA,OAAOA,YAAP,MAAyB,mCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,sBACE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEC,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI,WAJhC;AAKE,IAAA,EAAE,EAAEL,KAAK,CAACM;AALZ;AAAA;AAAA;AAAA;AAAA,WADF;AASD,CAVD,C,CAYA;;;KAZMP,a;;AAoDN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from \"../components/meetups/MeetupDetai\";\r\nimport { MongoClient, ObjectId } from \"mongodb\";\r\nconst MeetupDetails = () => {\r\n  return (\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n      id={props.id}\r\n    />\r\n  );\r\n};\r\n\r\n// The dynamic ids for which the page needs to be pre rendered should be specified\r\nexport async function getStaticPaths() {\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://jason2004:Jason@7531@cluster0.ugnh0.mongodb.net/DigitalScrapbook?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const meetups = await meetupsCollection.find({ _id: 1 }).toArray();\r\n  client.close();\r\n  return {\r\n    fallback: false,\r\n    paths: meetups.map((meetup) => ({\r\n      params: { meetupId: meetup._id.toString() },\r\n    })),\r\n  };\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n  const meetupId = context.params.meetupId;\r\n  const client = await MongoClient.connect(\r\n    \"mongodb+srv://jason2004:Jason@7531@cluster0.ugnh0.mongodb.net/DigitalScrapbook?retryWrites=true&w=majority\"\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection(\"meetups\");\r\n  const selectedMeetup = await meetupsCollection.findOne({\r\n    _id: ObjectId(meetupId),\r\n  });\r\n  return {\r\n    props: {\r\n      meetupData: {\r\n        id: selectedMeetup._id.toString(),\r\n        title: selectedMeetup.title,\r\n        address: selectedMeetup.address,\r\n        description: selectedMeetup.description,\r\n        image: selectedMeetup.image,\r\n      },\r\n    },\r\n  };\r\n}\r\n\r\nexport default MeetupDetails;\r\n"]},"metadata":{},"sourceType":"module"}